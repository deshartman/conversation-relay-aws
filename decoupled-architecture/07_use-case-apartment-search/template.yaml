AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Apartment Search Use Case Stack

Parameters:
  ConversationRelayRandomDataGeneratorLayerVersion:
    Type: String
    Default: '1'      
  ConversationRelaySaveToolCallResultLayerVersion:
    Type: String
    Default: '1'  

Globals:
  Function:
    Timeout: 35

Resources:

  ##########################################################################
  #  Lambda Layers (shared functions)                            
  ##########################################################################
  ApartmentSearchUtlitiyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ApartmentSearchUtlitiyLayer
      Description: Helper functions Apartment Search Use Case
      ContentUri: layers/layer-apartment-search-util/
      CompatibleRuntimes:
        - nodejs20.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain

  ##########################################################################
  #  (CheckAvailabilityFunction) Lambda Function                            
  ##########################################################################
  CheckAvailabilityFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: CheckAvailabilityFunction
      Description: Checks the availability of tour slots based on the user's preferences.
      CodeUri: lambdas/check-availability-function/
      AutoPublishAlias: live
      Handler: app.lambdaHandler
      Runtime: nodejs20.x      
      Architectures:
        - arm64
      MemorySize: 128
      Layers: 
        - !Ref ApartmentSearchUtlitiyLayer
        -
          !Sub 
          - 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ConversationRelaySaveToolCallResultLayer:${cv}'
          - cv : !Ref 'ConversationRelaySaveToolCallResultLayerVersion'        
      Environment:
        Variables:
          TABLE_NAME: !ImportValue  CRPrimaryDynamoTableName                           
      Policies:        
        - DynamoDBCrudPolicy:
            TableName: !ImportValue  CRPrimaryDynamoTableName
                      
  
  ##########################################################################
  #  (CommonInquiriesFunction) Lambda Function                            
  ##########################################################################
  CommonInquiriesFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: CommonInquiriesFunction
      Description: Handles common inquiries such as pet policy, fees, and other complex details, with the option to specify the apartment type.
      CodeUri: lambdas/common-inquiries-function/
      AutoPublishAlias: live
      Handler: app.lambdaHandler
      Runtime: nodejs20.x      
      Architectures:
        - arm64
      MemorySize: 128
      Layers: 
        - !Ref ApartmentSearchUtlitiyLayer
        -
          !Sub 
          - 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ConversationRelaySaveToolCallResultLayer:${cv}'
          - cv : !Ref 'ConversationRelaySaveToolCallResultLayerVersion'        
      Environment:
        Variables:
          TABLE_NAME: !ImportValue  CRPrimaryDynamoTableName                           
      Policies:        
        - DynamoDBCrudPolicy:
            TableName: !ImportValue  CRPrimaryDynamoTableName 

  ##########################################################################
  #  (ScheduleTourFunction) Lambda Function                            
  ##########################################################################
  ScheduleTourFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: ScheduleTourFunction
      Description: Schedules a tour for the current user.
      CodeUri: lambdas/schedule-tour-function/
      AutoPublishAlias: live
      Handler: app.lambdaHandler
      Runtime: nodejs20.x      
      Architectures:
        - arm64      
      MemorySize: 128
      Layers: 
        - !Ref ApartmentSearchUtlitiyLayer
        -
          !Sub 
          - 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ConversationRelaySaveToolCallResultLayer:${cv}'
          - cv : !Ref 'ConversationRelaySaveToolCallResultLayerVersion'        
      Environment:
        Variables:
          TABLE_NAME: !ImportValue  CRPrimaryDynamoTableName
      Policies:        
        - DynamoDBCrudPolicy:
            TableName: !ImportValue  CRPrimaryDynamoTableName                                     

  ##########################################################################
  #  (CheckExistingAppointmentsFunction) Lambda Function                            
  ##########################################################################
  CheckExistingAppointmentsFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: CheckExistingAppointmentsFunction
      Description: Schedules a tour for the current user.
      CodeUri: lambdas/check-existing-appointments-function/
      AutoPublishAlias: live
      Handler: app.lambdaHandler
      Runtime: nodejs20.x      
      Architectures:
        - arm64
      MemorySize: 128
      Layers: 
        - !Ref ApartmentSearchUtlitiyLayer
        -
          !Sub 
          - 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ConversationRelaySaveToolCallResultLayer:${cv}'
          - cv : !Ref 'ConversationRelaySaveToolCallResultLayerVersion'        
      Environment:
        Variables:
          TABLE_NAME: !ImportValue  CRPrimaryDynamoTableName 
      Policies:        
        - DynamoDBCrudPolicy:
            TableName: !ImportValue  CRPrimaryDynamoTableName                                    


  ##########################################################################
  #  (ListAvailableApartmentsFunction) Lambda Function                            
  ##########################################################################
  ListAvailableApartmentsFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: ListAvailableApartmentsFunction
      Description: Lists available apartments. 
      CodeUri: lambdas/list-available-apartments-function/
      AutoPublishAlias: live
      Handler: app.lambdaHandler
      Runtime: nodejs20.x      
      Architectures:
        - arm64  
      MemorySize: 128
      Layers: 
        - !Ref ApartmentSearchUtlitiyLayer
        -
          !Sub 
          - 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ConversationRelaySaveToolCallResultLayer:${cv}'
          - cv : !Ref 'ConversationRelaySaveToolCallResultLayerVersion'        
      Environment:
        Variables:
          TABLE_NAME: !ImportValue  CRPrimaryDynamoTableName
      Policies:        
        - DynamoDBCrudPolicy:
            TableName: !ImportValue  CRPrimaryDynamoTableName                                          

  ##########################################################################
  #  (SendAppointmentConfirmationSmsFunction) Lambda Function                            
  ##########################################################################
  SendAppointmentConfirmationSmsFunction:
    Type: AWS::Serverless::Function
    Properties:      
      FunctionName: SendAppointmentConfirmationSmsFunction
      Description: Lists available apartments. 
      CodeUri: lambdas/send-appointment-confirmation-sms-function/
      AutoPublishAlias: live
      Handler: app.lambdaHandler
      Runtime: nodejs20.x      
      Architectures:
        - arm64
      MemorySize: 128
      Policies:        
        - DynamoDBCrudPolicy:
            TableName: !ImportValue  CRPrimaryDynamoTableName
        - SNSPublishMessagePolicy:
            TopicName: !ImportValue TwilioSendMessageTopic     
      Layers:
        -
          !Sub 
          - 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ConversationRelaySaveToolCallResultLayer:${cv}'
          - cv : !Ref 'ConversationRelaySaveToolCallResultLayerVersion'                   
      Environment:
        Variables:
          TABLE_NAME: !ImportValue  CRPrimaryDynamoTableName
          TWILIO_SEND_MESSAGE_TOPIC_ARN: !ImportValue TwilioSendMessageTopicARN          
  
  ######################################################
  # RefreshApartmentAppointmentsFunction => From scheduled events, 
  # send out transactional emails for demo stats
  ######################################################
  RefreshApartmentAppointmentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'RefreshApartmentAppointmentsFunction'
      Description: "From scheduled events, delete old apartment appointments and add new ones for the next week."
      CodeUri: lambdas/refresh-apartment-appointments/
      AutoPublishAlias: live
      Handler: app.lambdaHandler
      Runtime: nodejs20.x
      Architectures:
        - arm64
      Timeout: 60
      Policies:        
        - DynamoDBCrudPolicy:
            TableName: !ImportValue  CRPrimaryDynamoTableName      
      Environment:
        Variables:
          TABLE_NAME: !ImportValue  CRPrimaryDynamoTableName            
      Layers:
        -
          !Sub 
          - 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ConversationRelayRandomDataGeneratorLayer:${cv}'
          - cv : !Ref 'ConversationRelayRandomDataGeneratorLayerVersion'                              
      #Events:
        #RefreshApartmentAppointments:
        #  Type: ScheduleV2
        #  Properties:
        #    Name: 'travel-transactional-01-Sink-MTWTF'
        #    Description: 'Send transactional emails to random sink addresses'
        #    ScheduleExpression: 'cron(22 18 ? * 2,3,4,5,6 *)' #11:22 AM PT            
        #    Input: '{"config": {"twilioSeed": false,"sinkAddresses": true,"sinkMin": 800,"sinkMax": 1300,"subuser": "travel-transactional","template_id": "d-26ef093705de41a5851577001a9ddf6f"}}'

##########################################################################
#   Outputs
##########################################################################
Outputs:
  
  RefreshApartmentAppointmentsFunctionName:
    Description: Name of the function that refreshes (creates new ones over next 2 weeks) available apartments.
    Value: !Ref RefreshApartmentAppointmentsFunction
    Export:
      Name: 'RefreshApartmentAppointmentsFunctionName'        